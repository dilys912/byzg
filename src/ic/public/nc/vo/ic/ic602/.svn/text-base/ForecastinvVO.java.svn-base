package nc.vo.ic.ic602;

/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

import java.util.ArrayList;
import nc.vo.pub.*;
import nc.vo.pub.lang.*;
import nc.vo.scm.ic.bill.FreeVO;
/**
 * 此处插入类型说明。
 *
 * 创建日期：(2001-8-24)
 * @author：Zhang Xin
 */
public class ForecastinvVO extends CircularlyAccessibleValueObject {

	private String m_foreday;
	private String m_foredaynum;
	private String m_querydate;
	private String m_cwarehouseid;
//eric
	private Integer m_ds; 
	private Integer m_kyds; 
	private String m_whname;
	private String m_cinventoryid;
	private String m_invcode;
	private String m_invname;
	private String m_invspec;
	private String m_invtype;
	private String m_pk_measdoc;
	private String m_measname;
	private String m_castunitid;
	private String m_astmeaname;
	private String m_vbatchcode;
	private UFDouble m_restnum;
	private UFDouble m_nfreezenum;
	private UFDouble m_nborrownum;
	private UFDouble m_nsafestocknum;
	private UFDouble m_nshldtraninnum;
	private UFDouble m_nshldtranoutnum;
	private UFDouble m_npraynum;
	private UFDouble m_npurchaseordernum;
	private UFDouble m_naccumchecknum;
	private UFDouble m_nsaleordernum;
	private UFDouble m_ndelivernum;
	private UFDouble m_nforecastnum;
	private UFDouble m_navailablenum;
	private UFDouble m_nmanufordernum;
	private UFDouble m_npreparematerialnum;
	private UFDouble m_nplannedordernum;
	//预订单
	private UFDouble m_npreordernum;
	//调拨申请
	private UFDouble m_ntranpraynum;

	private UFDouble m_nforeIN;
	private UFDouble m_nforeOUT;
	private UFDouble m_nagentordernum;
	private UFDouble m_nwwnum; //委外
	private FreeVO m_freevo;
	private UFDouble[] m_aryshldtraninnum;
	private UFDouble[] m_aryshldtranoutnum;
	private UFDouble[] m_arypraynum;
	private UFDouble[] m_arypurchaseordernum;
	private UFDouble[] m_aryaccumchecknum;
	private UFDouble[] m_arysaleordernum;
	private UFDouble[] m_arydelivernum;
	private UFDouble[] m_arymanufordernum;
	private UFDouble[] m_arypreparematerialnum;
	private UFDouble[] m_aryplannedordernum;
	private UFDouble[] m_aryagentordernum;
	private UFDouble[] m_arywwnum; //委外
	//预订单
	private UFDouble[] m_arypreordernum;
	//调拨申请
	private UFDouble[] m_arytranpraynum;

	//库存组织
	private String m_pk_calbody;
	private String m_bodyname;
	private String m_bodycode;
	private String m_pk_corp;
	private String m_corpname;
	private String m_corpcode;
	private String m_storname;
	
	public boolean m_isFreeExt=false;
	public boolean m_isBatchExt=false;
	public boolean m_isWhExt=false;

	private String pk_invbasdoc;
/**
 * 使用主键字段进行初始化的构造子。
 *
 * 创建日期：(2001-8-24)
 */
public ForecastinvVO() {

}
/**
 * 使用主键进行初始化的构造子。
 *
 * 创建日期：(2001-8-24)
 * @param ??fieldNameForMethod?? 主键值
 */
public ForecastinvVO(String newCwarehouseid) {

	// 为主键字段赋值:
	m_cwarehouseid = newCwarehouseid;
}
/**
 * 根类Object的方法,克隆这个VO对象。
 *
 * 创建日期：(2001-8-24)
 */
public Object clone() {

	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	ForecastinvVO forecastinventory = (ForecastinvVO)o;

	// 你在下面复制本VO对象的所有属性：

	return forecastinventory;
}
/**
 * 属性m_astmeaname的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getAstmeaname() {
	return m_astmeaname;
}
/**
 * <p>需要在一个循环中访问的属性的名称数组。
 * <p>
 * 创建日期：(??Date??)
 * @return java.lang.String[]
 */
public java.lang.String[] getAttributeNames() {

	return new String[] {
		"pk_corp",
		"storname",
		"cinventoryid",
		"invcode",
		"invname",
		"invspec",
		"invtype",
		"pk_measdoc",
		"measname",
		"castunitid",
		"astmeaname",
		"vbatchcode",
		"vfree0",
		"restnum",
		"nfreezenum",
		"nborrownum",
		"nshldtraninnum",
		"nshldtranoutnum",
		"npraynum",
		"npurchaseordernum",
		"naccumchecknum",
		"nsaleordernum",
		"ndelivernum",
		"nforecastnum",
		"navailablenum",
		"nmanufordernum",
		"npreparematerialnum",
		"nplannedordernum",
		"nsafestocknum",
		"nagentordernum","nwwnum","bodycode","bodyname","corpcode","corpname","storname","cwarehouseid","unitname","unitcode","ds","kyds" };
}
/**
 *  <p>根据一个属性名称字符串该属性的值。
 *  <p>
 * 创建日期：(2001-8-24)
 * @param key java.lang.String
 */
public Object getAttributeValue(String attributeName) {

	if (attributeName.equals("cwarehouseid")) {
		return m_cwarehouseid;
	} else if (attributeName.equals("nforeIN")) {
		return m_nforeIN;
	} else if (attributeName.equals("nforeOUT")) {
		return m_nforeOUT;
	} else if (attributeName.equals("foreday")) {
		return m_foreday;
	} else if (attributeName.equals("foredaynum")) {
		return m_foredaynum;
	} else if (attributeName.equals("querydate")) {
		return m_querydate;
	} else if (attributeName.equals("pk_calbody")) {
		return m_pk_calbody;
	} else if (attributeName.equals("bodycode")) {
		return m_bodycode;
	} else if (attributeName.equals("bodyname")) {
		return m_bodyname;

	} else if (attributeName.equals("pk_corp")) {
		return m_pk_corp;
	} else if (attributeName.equals("corpcode")||attributeName.equals("unitcode")) {
		return m_corpcode;
	} else if (attributeName.equals("corpname")||attributeName.equals("unitname")) {
		return m_corpname;
	} else if (attributeName.equals("storname")) {

		return m_storname;
	} else if (attributeName.equals("cinventoryid")) {
		return m_cinventoryid;
	} else if (attributeName.equals("invcode")) {
		return m_invcode;
	} else if (attributeName.equals("invname")) {
		return m_invname;
	} else if (attributeName.equals("invspec")) {
		return m_invspec;
	} else if (attributeName.equals("invtype")) {
		return m_invtype;
	}
	else if (attributeName.equals("pk_measdoc")) {
		return m_pk_measdoc;
	}
	else if (attributeName.equals("measname")) {
		return m_measname;
	} else if (attributeName.equals("castunitid")) {
		return m_castunitid;
	} else if (attributeName.equals("astmeaname")) {
		return m_astmeaname;
	} else if (attributeName.equals("vbatchcode")) {
		return m_vbatchcode;
	}else if (attributeName.equals("pk_invbasdoc")) {
		return pk_invbasdoc;
	}
	else if (attributeName.equals("restnum")) {
		return m_restnum;
	} else if (attributeName.equals("nfreezenum")) {
		return m_nfreezenum;
	} else if (attributeName.equals("nborrownum")) {
		return m_nborrownum;
	} else if (attributeName.equals("nwwnum")) {
		return m_nwwnum;
	} else if (attributeName.equals("nshldtraninnum")) {
		return m_nshldtraninnum;
	} else if (attributeName.equals("nshldtranoutnum")) {
		return m_nshldtranoutnum;
	} else if (attributeName.equals("npraynum")) {
		return m_npraynum;
	} else if (attributeName.equals("npurchaseordernum")) {
		return m_npurchaseordernum;
	} else if (attributeName.equals("naccumchecknum")) {
		return m_naccumchecknum;
	} else if (attributeName.equals("nsaleordernum")) {
		return m_nsaleordernum;
	} else if (attributeName.equals("ndelivernum")) {
		return m_ndelivernum;
	} else if (attributeName.equals("nforecastnum")) {
		return m_nforecastnum;
	} else if (attributeName.equals("navailablenum")) {
		return m_navailablenum;
	} else if (attributeName.equals("nmanufordernum")) {
		return m_nmanufordernum;
	} else if (attributeName.equals("npreparematerialnum")) {
		return m_npreparematerialnum;
	} else if (attributeName.equals("nplannedordernum")) {
		return m_nplannedordernum;
	} else if (attributeName.equals("npreordernum")) {
		return m_npreordernum;
	} else if (attributeName.equals("ntranpraynum")) {
		return m_ntranpraynum;
	} else if (attributeName.equals("nsafestocknum")) {
		return m_nsafestocknum;
	} else if (attributeName.equals("nagentordernum")) {
		return m_nagentordernum;
	} else if (attributeName.equals("ds")) {
		return m_ds;
	} else if (attributeName.equals("kyds")) {
		return m_kyds;
	} 
	else
		return getFreeItemValue(attributeName);

}
/**
 * 属性m_castunitid的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getCastunitid() {
	return m_castunitid;
}
/**
 * 属性m_cinventoryid的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getCinventoryid() {
	return m_cinventoryid;
}
/**
 * 属性m_cwarehouseid的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getCwarehouseid() {
	return m_cwarehouseid;
}
/**
 * 返回数值对象的显示名称。
 *
 * 创建日期：(2001-8-24)
 * @return java.lang.String 返回数值对象的显示名称。
 */
public String getEntityName() {

	return "Forecastinventory";
}

public Integer getDs() {
	return m_ds;
}
public void setDs(Integer ds) {
	this.m_ds = ds;
}

public Integer getM_kyds() {
	return m_kyds;
}
public void setM_kyds(Integer m_kyds) {
	this.m_kyds = m_kyds;
}
/**
 * 属性m_freeItem的Getter方法。
 *
 * 创建日期：(2001-6-19)
 * @return String
 */
public String getFreeItemValue(String sItemKey) {
	if(m_freevo!=null && m_freevo.getAttributeValue(sItemKey)!=null)
		return m_freevo.getAttributeValue(sItemKey).toString();
	else
		return null;
}
/**
 *
 * 创建者：王乃军
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2001-6-21 0:02:44)
 * 修改日期，修改人，修改原因，注释标志：
 * @return nc.vo.scm.ic.bill.FreeVO
 */
public FreeVO getFreeItemVO() {
	if(m_freevo!=null)
		return (FreeVO)m_freevo.clone();
	else
		return null;
}
/**
 * 属性m_invcode的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getInvcode() {
	return m_invcode;
}
/**
 * 属性m_invname的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getInvname() {
	return m_invname;
}
/**
 * 属性m_invspec的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getInvspec() {
	return m_invspec;
}
/**
 * 属性m_invtype的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getInvtype() {
	return m_invtype;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_aryaccumchecknum() {
	return m_aryaccumchecknum;
}
/**
 * 此处插入方法说明。
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2001-11-27 13:42:02)
 * 修改日期，修改人，修改原因，注释标志：
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_aryagentordernum() {
	return m_aryagentordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arydelivernum() {
	return m_arydelivernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arymanufordernum() {
	return m_arymanufordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_aryplannedordernum() {
	return m_aryplannedordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arypraynum() {
	return m_arypraynum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arypreordernum() {
	return m_arypreordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arypreparematerialnum() {
	return m_arypreparematerialnum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arypurchaseordernum() {
	return m_arypurchaseordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arysaleordernum() {
	return m_arysaleordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_aryshldtraninnum() {
	return m_aryshldtraninnum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_aryshldtranoutnum() {
	return m_aryshldtranoutnum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arytranpraynum() {
	return m_arytranpraynum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @return nc.vo.pub.lang.UFDouble[]
 */
public nc.vo.pub.lang.UFDouble[] getM_arywwnum() {
	return m_arywwnum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @return nc.vo.pub.lang.UFDouble
 */
public nc.vo.pub.lang.UFDouble getM_npreordernum() {
	return m_npreordernum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @return nc.vo.pub.lang.UFDouble
 */
public nc.vo.pub.lang.UFDouble getM_ntranpraynum() {
	return m_ntranpraynum;
}
/**
 * 属性m_measname的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getMeasname() {
	return m_measname;
}
/**
 * 属性m_naccumchecknum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNaccumchecknum() {
	return m_naccumchecknum;
}
/**
 * 属性m_navailablenum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNavailablenum() {
	return m_navailablenum;
}
/**
 * 属性m_nborrownum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNborrownum() {
	return m_nborrownum;
}
/**
 * 属性m_ndelivernum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNdelivernum() {
	return m_ndelivernum;
}
/**
 * 属性m_nforecastnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNforecastnum() {
	return m_nforecastnum;
}
/**
 * 属性m_nfreezenum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNfreezenum() {
	return m_nfreezenum;
}
/**
 * 属性m_nmanufordernum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNmanufordernum() {
	return m_nmanufordernum;
}
/**
 * 属性m_npraynum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNpraynum() {
	return m_npraynum;
}
/**
 * 属性m_npreparematerialnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNpreparematerialnum() {
	return m_npreparematerialnum;
}
/**
 * 属性m_nsaleordernum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNsaleordernum() {
	return m_nsaleordernum;
}
/**
 * 属性m_nshldtraninnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNshldtraninnum() {
	return m_nshldtraninnum;
}
/**
 * 属性m_nshldtranoutnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNshldtranoutnum() {
	return m_nshldtranoutnum;
}
/**
 * 属性m_nshldtranoutnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getNwwnum() {
	return m_nwwnum;
}
/**
 * 属性m_pk_corp的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getPk_corp() {
	return m_pk_corp;
}
/**
 * 返回对象标识，用来唯一定位对象。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getPrimaryKey() {

	return m_cwarehouseid;
}
/**
 * 属性m_restnum的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return UFDouble
 */
public UFDouble getRestnum() {
	return m_restnum;
}
/**
 * 属性m_vbatchcode的Getter方法。
 *
 * 创建日期：(2001-8-24)
 * @return String
 */
public String getVbatchcode() {
	return m_vbatchcode;
}
/**
 * 属性m_astmeaname的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_astmeaname String
 */
public void setAstmeaname(String newAstmeaname) {

	m_astmeaname = newAstmeaname;
}
/**
 *  <p>对参数name对型的属性设置值。
 *  <p>
 * 创建日期：(2001-8-24)
 * @param key java.lang.String
 */
public void setAttributeValue(String name, Object value) {

	/** 将value 的值为空串的人为置为null */
	if (value != null && value.toString().trim().length() == 0)
		value = null;
	else if (value != null)
		value = value.toString().trim();

	try {
		if (name.equals("cwarehouseid")) {
			m_cwarehouseid = (String) value;
		} else if (name.equals("pk_corp")) {
			m_pk_corp = (String) value;
		} else if (name.equals("corpcode")||name.equals("unitcode")) {
			m_corpcode = (String) value;
		} else if (name.equals("corpname")||name.equals("unitname")) {
			m_corpname = (String) value;
		} else if (name.equals("pk_calbody")) {
			m_pk_calbody = (String) value;
		} else if (name.equals("bodycode")) {
			m_bodycode = (String) value;
		} else if (name.equals("bodyname")) {
			m_bodyname = (String) value;
		} else if (name.equals("foreday")) {
			m_foreday = (String) value;
		} else if (name.equals("foredaynum")) {
			m_foredaynum = (String) value;
		} else if (name.equals("querydate")) {
			m_querydate = (String) value;
		} else if (name.equals("storname")) {
			m_storname = (String) value;
		} else if (name.equals("cinventoryid")) {
			m_cinventoryid = (String) value;
		} else if (name.equals("invcode")) {
			m_invcode = (String) value;
		} else if (name.equals("invname")) {
			m_invname = (String) value;
		} else if (name.equals("invspec")) {
			m_invspec = (String) value;
		} else if (name.equals("invtype")) {
			m_invtype = (String) value;
		} 
		else if (name.equals("pk_measdoc")) {
			m_pk_measdoc = (String) value;
		} 
		else if (name.equals("measname")) {
			m_measname = (String) value;
		} else if (name.equals("castunitid")) {
			m_castunitid = (String) value;
		} else if (name.equals("astmeaname")) {
			m_astmeaname = (String) value;
		} else if (name.equals("vbatchcode")) {
			m_vbatchcode = (String) value;
		} else if (name.equals("nforeIN")) {
			m_nforeIN = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nforeOUT")) {
			m_nforeOUT = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("restnum")) {
			m_restnum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nfreezenum")) {
			m_nfreezenum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nborrownum")) {
			m_nborrownum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nshldtraninnum")) {
			m_nshldtraninnum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nshldtranoutnum")) {
			m_nshldtranoutnum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("npraynum")) {
			m_npraynum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("npurchaseordernum")) {
			m_npurchaseordernum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("naccumchecknum")) {
			m_naccumchecknum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nsaleordernum")) {
			m_nsaleordernum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("ndelivernum")) {
			m_ndelivernum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nforecastnum")) {
			m_nforecastnum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("navailablenum")) {
			m_navailablenum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nmanufordernum")) {
			m_nmanufordernum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("npreparematerialnum")) {
			m_npreparematerialnum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nplannedordernum")) {
			m_nplannedordernum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("npreordernum")) {
			m_npreordernum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("ntranpraynum")) {
			m_ntranpraynum =
				value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nsafestocknum")) {
			m_nsafestocknum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nagentordernum")) {
			m_nagentordernum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("nwwnum")) {
			m_nwwnum = value == null ? null : new UFDouble(value.toString().trim());
		} else if (name.equals("pk_invbasdoc")) {
			pk_invbasdoc = (String) value;
		}else if(name.equals("ds")){
			m_ds = value == null ? 0 : new Integer(value.toString());
		}else if(name.equals("kyds")){
			m_kyds = value == null ? 0 : new Integer(value.toString());
		}
		else if (value != null)
			setFreeItemValue(name, value.toString());
		else
			setFreeItemValue(name, null);
	} catch (ClassCastException e) {
		/*@res "setAttributeValue方法中为{0} 赋值时类型转换错误！（值：{1}）"*/
		throw new ClassCastException(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("SCMCOMMON","UPPSCMCommon-000005", null, new String[]{name, value.toString()}));
	}
}
/**
 * 属性m_castunitid的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_castunitid String
 */
public void setCastunitid(String newCastunitid) {

	m_castunitid = newCastunitid;
}
/**
 * 属性m_cinventoryid的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_cinventoryid String
 */
public void setCinventoryid(String newCinventoryid) {

	m_cinventoryid = newCinventoryid;
}
/**
 * 属性m_cwarehouseid的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_cwarehouseid String
 */
public void setCwarehouseid(String newCwarehouseid) {

	m_cwarehouseid = newCwarehouseid;
}
/**
 * 属性m_freeItem的Getter方法。
 *
 * 创建日期：(2001-6-19)
 * @return String
 */
public void setFreeItemValue(String sItemKey, String sValue) {
	if (m_freevo == null)
		m_freevo = new FreeVO();

	m_freevo.setAttributeValue(sItemKey, sValue);
}
/**
 *
 * 创建者：王乃军
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2001-6-21 0:02:44)
 * 修改日期，修改人，修改原因，注释标志：
 * @param newM_freevo nc.vo.scm.ic.bill.FreeVO
 */
public void setFreeItemVO(FreeVO newM_freevo) {
	if (newM_freevo != null)
		m_freevo= (FreeVO)newM_freevo.clone();
	else
		m_freevo= null;
}
/**
 * 属性m_invcode的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_invcode String
 */
public void setInvcode(String newInvcode) {

	m_invcode = newInvcode;
}
/**
 * 属性m_invname的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_invname String
 */
public void setInvname(String newInvname) {

	m_invname = newInvname;
}
/**
 * 属性m_invspec的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_invspec String
 */
public void setInvspec(String newInvspec) {

	m_invspec = newInvspec;
}
/**
 * 属性m_invtype的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_invtype String
 */
public void setInvtype(String newInvtype) {

	m_invtype = newInvtype;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_aryaccumchecknum nc.vo.pub.lang.UFDouble[]
 */
public void setM_aryaccumchecknum(nc.vo.pub.lang.UFDouble[] newM_aryaccumchecknum) {
	m_aryaccumchecknum = newM_aryaccumchecknum;
}
/**
 * 此处插入方法说明。
 * 功能：
 * 参数：
 * 返回：
 * 例外：
 * 日期：(2001-11-27 13:42:02)
 * 修改日期，修改人，修改原因，注释标志：
 * @param newM_aryagentordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_aryagentordernum(nc.vo.pub.lang.UFDouble[] newM_aryagentordernum) {
	m_aryagentordernum = newM_aryagentordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arydelivernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arydelivernum(nc.vo.pub.lang.UFDouble[] newM_arydelivernum) {
	m_arydelivernum = newM_arydelivernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arymanufordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arymanufordernum(nc.vo.pub.lang.UFDouble[] newM_arymanufordernum) {
	m_arymanufordernum = newM_arymanufordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_aryplannedordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_aryplannedordernum(nc.vo.pub.lang.UFDouble[] newM_aryplannedordernum) {
	m_aryplannedordernum = newM_aryplannedordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arypraynum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arypraynum(nc.vo.pub.lang.UFDouble[] newM_arypraynum) {
	m_arypraynum = newM_arypraynum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @param newM_arypredordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arypreordernum(nc.vo.pub.lang.UFDouble[] newM_arypredordernum) {
	m_arypreordernum = newM_arypredordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arypreparematerialnum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arypreparematerialnum(nc.vo.pub.lang.UFDouble[] newM_arypreparematerialnum) {
	m_arypreparematerialnum = newM_arypreparematerialnum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arypurchaseordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arypurchaseordernum(nc.vo.pub.lang.UFDouble[] newM_arypurchaseordernum) {
	m_arypurchaseordernum = newM_arypurchaseordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_arysaleordernum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arysaleordernum(nc.vo.pub.lang.UFDouble[] newM_arysaleordernum) {
	m_arysaleordernum = newM_arysaleordernum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_aryshldtraninnum nc.vo.pub.lang.UFDouble[]
 */
public void setM_aryshldtraninnum(nc.vo.pub.lang.UFDouble[] newM_aryshldtraninnum) {
	m_aryshldtraninnum = newM_aryshldtraninnum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_aryshldtranoutnum nc.vo.pub.lang.UFDouble[]
 */
public void setM_aryshldtranoutnum(nc.vo.pub.lang.UFDouble[] newM_aryshldtranoutnum) {
	m_aryshldtranoutnum = newM_aryshldtranoutnum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @param newM_arytranpraynum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arytranpraynum(nc.vo.pub.lang.UFDouble[] newM_arytranpraynum) {
	m_arytranpraynum = newM_arytranpraynum;
}
/**
 * 此处插入方法说明。
 * 创建日期：(2001-9-13 20:47:30)
 * @param newM_aryshldtranoutnum nc.vo.pub.lang.UFDouble[]
 */
public void setM_arywwnum(nc.vo.pub.lang.UFDouble[] newM_arywwnum) {
	m_arywwnum = newM_arywwnum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @param newM_npredordernum nc.vo.pub.lang.UFDouble
 */
public void setM_npreordernum(nc.vo.pub.lang.UFDouble newM_npredordernum) {
	m_npreordernum = newM_npredordernum;
}
/**
 * 函数功能:
 *
 *   参数:
 *
 *   返回值:
 *
 *   异常:
 *
 * @param newM_ntranpraynum nc.vo.pub.lang.UFDouble
 */
public void setM_ntranpraynum(nc.vo.pub.lang.UFDouble newM_ntranpraynum) {
	m_ntranpraynum = newM_ntranpraynum;
}
/**
 * 属性m_measname的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_measname String
 */
public void setMeasname(String newMeasname) {

	m_measname = newMeasname;
}
/**
 * 属性m_naccumchecknum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_naccumchecknum UFDouble
 */
public void setNaccumchecknum(UFDouble newNaccumchecknum) {

	m_naccumchecknum = newNaccumchecknum;
}
/**
 * 属性m_navailablenum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_navailablenum UFDouble
 */
public void setNavailablenum(UFDouble newNavailablenum) {

	m_navailablenum = newNavailablenum;
}
/**
 * 属性m_nborrownum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nborrownum UFDouble
 */
public void setNborrownum(UFDouble newNborrownum) {

	m_nborrownum = newNborrownum;
}
/**
 * 属性m_ndelivernum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_ndelivernum UFDouble
 */
public void setNdelivernum(UFDouble newNdelivernum) {

	m_ndelivernum = newNdelivernum;
}
/**
 * 属性m_nforecastnum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nforecastnum UFDouble
 */
public void setNforecastnum(UFDouble newNforecastnum) {

	m_nforecastnum = newNforecastnum;
}
/**
 * 属性m_nfreezenum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nfreezenum UFDouble
 */
public void setNfreezenum(UFDouble newNfreezenum) {

	m_nfreezenum = newNfreezenum;
}
/**
 * 属性m_nmanufordernum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nmanufordernum UFDouble
 */
public void setNmanufordernum(UFDouble newNmanufordernum) {

	m_nmanufordernum = newNmanufordernum;
}
/**
 * 属性m_npraynum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_npraynum UFDouble
 */
public void setNpraynum(UFDouble newNpraynum) {

	m_npraynum = newNpraynum;
}
/**
 * 属性m_npreparematerialnum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_npreparematerialnum UFDouble
 */
public void setNpreparematerialnum(UFDouble newNpreparematerialnum) {

	m_npreparematerialnum = newNpreparematerialnum;
}
/**
 * 属性m_nsaleordernum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nsaleordernum UFDouble
 */
public void setNsaleordernum(UFDouble newNsaleordernum) {

	m_nsaleordernum = newNsaleordernum;
}
/**
 * 属性m_nshldtraninnum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nshldtraninnum UFDouble
 */
public void setNshldtraninnum(UFDouble newNshldtraninnum) {

	m_nshldtraninnum = newNshldtraninnum;
}
/**
 * 属性m_nshldtranoutnum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_nshldtranoutnum UFDouble
 */
public void setNshldtranoutnum(UFDouble newNshldtranoutnum) {

	m_nshldtranoutnum = newNshldtranoutnum;
}
/**
 * 属性m_npraynum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_npraynum UFDouble
 */
public void setNwwnum(UFDouble newNwwnum) {

	m_nwwnum = newNwwnum;
}

/**
 * 属性m_pk_corp的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_pk_corp String
 */
public void setPk_corp(String newPk_corp) {

	m_pk_corp = newPk_corp;
}
/**
 * 设置对象标识，用来唯一定位对象。
 *
 * 创建日期：(2001-8-24)
 * @param m_cwarehouseid String
 */
public void setPrimaryKey(String newCwarehouseid) {

	m_cwarehouseid = newCwarehouseid;
}
/**
 * 属性m_restnum的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_restnum UFDouble
 */
public void setRestnum(UFDouble newRestnum) {

	m_restnum = newRestnum;
}
/**
 * 属性m_vbatchcode的setter方法。
 *
 * 创建日期：(2001-8-24)
 * @param newM_vbatchcode String
 */
public void setVbatchcode(String newVbatchcode) {

	m_vbatchcode = newVbatchcode;
}
/**
 * 验证对象各属性之间的数据逻辑正确性。
 *
 * 创建日期：(2001-8-24)
 * @exception nc.vo.pub.ValidationException 如果验证失败，抛出
 *     ValidationException，对错误进行解释。
 */
public void validate() throws ValidationException {

	ArrayList errFields = new ArrayList(); // errFields record those null fields that cannot be null.
	// 检查是否为不允许空的字段赋了空值，你可能需要修改下面的提示信息：
	if (m_cwarehouseid == null) {
		errFields.add(new String("m_cwarehouseid"));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("4008report","UPP4008report-000007")/*@res "下列字段不能为空："*/);
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("SCMCOMMON","UPPSCMCommon-000000")/*@res "、"*/);
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
}